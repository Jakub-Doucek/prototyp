name: CI Web Build

on:
  workflow_dispatch:

# Required for Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  export_game:
    runs-on: ubuntu-latest
    name: Export Game
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true

      - name: Godot Export (HTML5)
        id: export
        uses: firebelley/godot-export@v7.0.0
        with:
          # Godot 4.5 (matches your example)
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.5-stable/Godot_v4.5-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.5-stable/Godot_v4.5-stable_export_templates.tpz

          cache: true

          # Your project root:
          relative_project_path: ./godot_project/prototyp

          # Export preset name from Project → Export (HTML5)
          presets_to_export: "Web"

          # We'll keep your desired output folder
          # (Your preset's export path can still be 'web_export/prototyp.html')
          relative_export_path: ./web_export

          # (Optional) creates zip archives; not needed for Pages
          archive_output: false

      - name: Show export outputs (debug)
        run: |
          echo "Archive directory: ${{ steps.export.outputs.archive_directory }}"
          ls -la "${{ steps.export.outputs.archive_directory }}" || true
          echo "Build directory: ${{ steps.export.outputs.build_directory }}"
          ls -la "${{ steps.export.outputs.build_directory }}" || true
          echo "Working directory listing:"
          ls -la

      - name: Prepare Pages artifact
        shell: bash
        run: |
          set -euo pipefail

          BUILD_DIR="${{ steps.export.outputs.build_directory }}"
          # Fallback if the action didn’t set the output for some reason
          if [ ! -d "$BUILD_DIR" ]; then
            BUILD_DIR="web_export"
          fi

          # Ensure Jekyll doesn't interfere with files like _* etc.
          touch "$BUILD_DIR/.nojekyll"

          # Option A: rename main HTML so Pages auto-loads it
          if [ -f "$BUILD_DIR/prototyp.html" ]; then
            mv "$BUILD_DIR/prototyp.html" "$BUILD_DIR/index.html"
          fi

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.export.outputs.build_directory }}

deploy:
  needs: export_game
  runs-on: ubuntu-latest
  steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Print site URL
      run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"